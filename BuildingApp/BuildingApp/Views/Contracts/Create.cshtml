@model BuildingApp.Models.ModelView.ContractViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

<div class="content">
    @using (Html.BeginForm("Create", "Contracts", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Create</h4>
            <hr />
            <div class="form-group">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                @if (ViewBag.Success != null)
                {
                <div class="alert alert-success">@ViewBag.Success</div>
                }
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model., new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Age, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Identify, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Identify, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Identify, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email , "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.RoomName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.RoomName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoomName, "", new { @class = "text-danger" })
                </div>
            </div>*@

            
            <div class="form-group">
                @Html.LabelFor(model => model.TypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Name", new SelectList(new string[] { }), new { @class = "form-control", })
                    @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            
            <a asp-action="Index">Back to List</a>
        </div>
    }
    </div>


        @section Scripts {
            @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        }
                